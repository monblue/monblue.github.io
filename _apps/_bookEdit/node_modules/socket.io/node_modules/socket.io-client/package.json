{
  "name": "socket.io-client",
  "version": "1.0.6",
  "keywords": [
    "realtime",
    "framework",
    "websocket",
    "tcp",
    "events",
    "client"
  ],
  "dependencies": {
    "debug": "0.7.4",
    "engine.io-client": "1.3.1",
    "component-bind": "1.0.0",
    "component-emitter": "1.1.2",
    "object-component": "0.0.3",
    "socket.io-parser": "2.2.1",
    "has-binary-data": "0.1.1",
    "indexof": "0.0.1",
    "parseuri": "0.0.2",
    "to-array": "0.1.3"
  },
  "devDependencies": {
    "socket.io": "1.0.6",
    "mocha": "1.16.2",
    "zuul": "1.6.3",
    "istanbul": "0.2.1",
    "expect.js": "0.2.0",
    "uglify-js": "2.4.8",
    "browserify": "2.35.1",
    "base64-arraybuffer": "0.1.0",
    "text-blob-builder": "0.0.1",
    "has-cors": "1.0.3"
  },
  "scripts": {
    "test": "make test"
  },
  "contributors": [
    {
      "name": "Guillermo Rauch",
      "email": "rauchg@gmail.com"
    },
    {
      "name": "Arnout Kazemier",
      "email": "info@3rd-eden.com"
    },
    {
      "name": "Vladimir Dronnikov",
      "email": "dronnikov@gmail.com"
    },
    {
      "name": "Einar Otto Stangvik",
      "email": "einaros@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/LearnBoost/socket.io-client.git"
  },
  "license": "MIT",
  "readme": "\r\n# socket.io-client\r\n\r\n[![Build Status](https://secure.travis-ci.org/Automattic/socket.io-client.png)](http://travis-ci.org/Automattic/socket.io-client)\r\n[![NPM version](https://badge.fury.io/js/socket.io-client.png)](http://badge.fury.io/js/socket.io-client)\r\n\r\n## How to use\r\n\r\nA standalone build of `socket.io-client` is exposed automatically by the\r\nsocket.io server as `/socket.io/socket.io.js`. Alternatively you can\r\nserve the file `socket.io.js` found at the root of this repository.\r\n\r\n```html\r\n<script src=\"/socket.io/socket.io.js\"></script>\r\n<script>\r\n  var socket = io('http://localhost');\r\n  socket.on('connect', function(){\r\n    socket.on('event', function(data){});\r\n    socket.on('disconnect', function(){});\r\n  });\r\n</script>\r\n```\r\n\r\nSocket.IO is compatible with [browserify](http://browserify.org/).\r\n\r\n### Node.JS (server-side usage)\r\n\r\n  Add `socket.io-client` to your `package.json` and then:\r\n\r\n  ```js\r\n  var socket = require('socket.io-client')('http://localhost');\r\n  socket.on('connect', function(){\r\n    socket.on('event', function(data){});\r\n    socket.on('disconnect', function(){});\r\n  });\r\n  ```\r\n\r\n## API\r\n\r\n### IO(url:String, opts:Object):Socket\r\n\r\n  Exposed as the `io` namespace in the standalone build, or the result\r\n  of calling `require('socket.io-client')`.\r\n\r\n  When called, it creates a new `Manager` for the given URL, and attempts\r\n  to reuse an existing `Manager` for subsequent calls, unless the\r\n  `multiplex` option is passed with `false`.\r\n\r\n  The rest of the options are passed to the `Manager` constructor (see below\r\n  for details).\r\n\r\n  A `Socket` instance is returned for the namespace specified by the\r\n  pathname in the URL, defaulting to `/`. For example, if the `url` is\r\n  `http://localhost/users`, a transport connection will be established to\r\n  `http://localhost` and a Socket.IO connection will be established to\r\n  `/users`.\r\n\r\n### IO#protocol\r\n\r\n  Socket.io protocol revision number this client works with.\r\n\r\n### IO#Socket\r\n\r\n  Reference to the `Socket` constructor.\r\n\r\n### IO#Manager\r\n\r\n  Reference to the `Manager` constructor.\r\n\r\n### IO#Emitter\r\n\r\n  Reference to the `Emitter` constructor.\r\n\r\n### Manager(url:String, opts:Object)\r\n\r\n  A `Manager` represents a connection to a given Socket.IO server. One or\r\n  more `Socket` instances are associated with the manager. The manager\r\n  can be accessed through the `io` property of each `Socket` instance.\r\n\r\n  The `opts` are also passed to `engine.io` upon initialization of the\r\n  underlying `Socket`.\r\n\r\n  Options:\r\n  - `reconnection` whether to reconnect automatically (`true`)\r\n  - `reconnectionDelay` how long to wait before attempting a new\r\n    reconnection (`1000`)\r\n  - `reconnectionDelayMax` maximum amount of time to wait between\r\n    reconnections (`5000`). Each attempt increases the reconnection by\r\n    the amount specified by `reconnectionDelay`.\r\n  - `timeout` connection timeout before a `connect_error`\r\n    and `connect_timeout` events are emitted (`20000`)\r\n\r\n#### Events\r\n\r\n  - `connect`. Fired upon a successful connection.\r\n  - `connect_error`. Fired upon a connection error.\r\n    Parameters:\r\n      - `Object` error object\r\n  - `connect_timeout`. Fired upon a connection timeout.\r\n  - `reconnect`. Fired upon a successful reconnection.\r\n    Parameters:\r\n      - `Number` reconnection attempt number\r\n  - `reconnect_attempt`. Fired upon an attempt to reconnect.\r\n  - `reconnecting`. Fired upon an attempt to reconnect.\r\n    Parameters:\r\n      - `Number` reconnection attempt number\r\n  - `reconnect_error`. Fired upon a reconnection attempt error.\r\n    Parameters:\r\n      - `Object` error object\r\n  - `reconnect_failed`. Fired when couldn't reconnect within `reconnectionAttempts`\r\n\r\nThe events above are also emitted on the individual sockets that\r\nreconnect that depend on this `Manager`.\r\n\r\n### Manager#reconnection(v:Boolean):Manager\r\n\r\n  Sets the `reconnection` option, or returns it if no parameters\r\n  are passed.\r\n\r\n### Manager#reconnectionAttempts(v:Boolean):Manager\r\n\r\n  Sets the `reconnectionAttempts` option, or returns it if no parameters\r\n  are passed.\r\n\r\n### Manager#reconnectionDelay(v:Boolean):Manager\r\n\r\n  Sets the `reconectionDelay` option, or returns it if no parameters\r\n  are passed.\r\n\r\n### Manager#reconnectionDelayMax(v:Boolean):Manager\r\n\r\n  Sets the `reconectionDelayMax` option, or returns it if no parameters\r\n  are passed.\r\n\r\n### Manager#timeout(v:Boolean):Manager\r\n\r\n  Sets the `timeout` option, or returns it if no parameters\r\n  are passed.\r\n\r\n### Socket\r\n\r\n#### Events\r\n\r\n  - `connect`. Fired upon connecting.\r\n  - `error`. Fired upon a connection error\r\n    Parameters:\r\n      - `Object` error data\r\n  - `disconnect`. Fired upon a disconnection.\r\n  - `reconnect`. Fired upon a successful reconnection.\r\n    Parameters:\r\n      - `Number` reconnection attempt number\r\n  - `reconnect_attempt`. Fired upon an attempt to reconnect.\r\n  - `reconnecting`. Fired upon an attempt to reconnect.\r\n    Parameters:\r\n      - `Number` reconnection attempt number\r\n  - `reconnect_error`. Fired upon a reconnection attempt error.\r\n    Parameters:\r\n      - `Object` error object\r\n  - `reconnect_failed`. Fired when couldn't reconnect within `reconnectionAttempts`\r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "description": "[![Build Status](https://secure.travis-ci.org/Automattic/socket.io-client.png)](http://travis-ci.org/Automattic/socket.io-client)\r [![NPM version](https://badge.fury.io/js/socket.io-client.png)](http://badge.fury.io/js/socket.io-client)",
  "bugs": {
    "url": "https://github.com/LearnBoost/socket.io-client/issues"
  },
  "homepage": "https://github.com/LearnBoost/socket.io-client",
  "_id": "socket.io-client@1.0.6",
  "_from": "socket.io-client@1.0.6"
}
